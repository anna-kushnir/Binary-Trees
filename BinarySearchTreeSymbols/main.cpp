// Спроєктувати класи для представлення двійкового дерева пошуку, елементами якого є символи, що не повторюються.
// Реалізувати необхідні конструктори, метод виведення дерева, інші методи для виконання поставленого завдання. 
// Знайти глибину дерева та довжину шляху (число гілок) від кореня до значення символа, введеного з клавіатури.
// Програма повинна забезпечувати наочне виведення усіх вхідних, вихідних та проміжних даних, а також контроль 
// можливих помилок. Для обробки помилок (у тому числі не коректного введення даних) використати виключні ситуації.

#include "functions.h"
using namespace std;

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	string str;
	cout << "Введіть рядок: "; cin >> str;

	string newStr = deleteRecurringSymbs(str);
	cout << "\nВведений вами рядок після видалення символів, що повторюються: " << newStr;

	BinarySearchTree Tree(newStr);

	cout << "\n\nУтворене дерево:\n\n";
	Tree.printTree();

	int height = Tree.countHeight();
	cout << "\n\nГлибина дерева: " << height;

	char ch;
	cout << "\n\nВведіть символ, шлях до якого ви бажаєте знайти: "; cin >> ch;
	int way = Tree.countWay(ch);
	if (way == -1) {
		cout << "\nУведений символ не знайдений у дереві!\n\n";
	}
	else {
		cout << "\nШлях до введеного символу рівний: " << way << "\n\n";
	}

	Tree.clearMemory();

	system("pause");
	return 0;
}
