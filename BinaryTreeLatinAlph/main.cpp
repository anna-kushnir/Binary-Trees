// Спроєктувати класи для представлення двійкового дерева, елементами якого є символи латинського алфавіту. 
// Реалізувати необхідні конструктори, метод виведення дерева, інші методи для виконання поставленого завдання. 
// Визначити кількість входжень у дерево заданого символа та координати відповідних символів-дублікатів (номер 
// рівня та номер гілки).
// Програма повинна забезпечувати наочне виведення усіх вхідних, вихідних та проміжних даних, а також контроль 
// можливих помилок. Для обробки помилок (у тому числі не коректного введення даних) використати виключні ситуації.

// 0:31

#include "functions.h"
using namespace std;

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	cout << "Введіть рядок: ";
	string str = inputString();
	cin.ignore(32767, '\n');
	BinaryTree Tree(str);

	cout << "\n\nУтворене бінарне дерево:\n\n";
	Tree.printTree();

// 1:26

	char ch;
	cout << "\n\nВведіть символ, кількість входжень якого необхідно порахувати: "; 
	while (true) {
		try {
			cin >> ch;
			if (!isalpha(ch)) throw "Incorrect";
			else break;
		}
		catch (const char*) {
			cin.clear();
			cin.ignore(32672, '\n');
			cout << "Символ повинен бути латинською літерою!\nВведіть ще раз: ";
		}
	}
	
	int count = Tree.countOccurrences(ch);
	cout << "\n\nКількість входжень уведеного символу в дерево: " << count << "\n\n";

	cout << "\nПерелік координат дерева, де присутній введений символ:\n\n";
	Tree.outputSymbPos(ch);
	cout << "\n";

// 2:02

	Tree.clearMemory();

	system("pause");
	return 0;
}
